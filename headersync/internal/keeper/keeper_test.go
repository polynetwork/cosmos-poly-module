/*
 * Copyright (C) 2020 The poly network Authors
 * This file is part of The poly network library.
 *
 * The  poly network  is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * The  poly network  is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 * You should have received a copy of the GNU Lesser General Public License
 * along with The poly network .  If not, see <http://www.gnu.org/licenses/>.
 */

package keeper_test

import (
	"encoding/hex"
	"encoding/json"
	"fmt"
	sdk "github.com/cosmos/cosmos-sdk/types"
	"github.com/polynetwork/cosmos-poly-module/headersync/internal/types"
	"github.com/polynetwork/cosmos-poly-module/simapp"
	polycommon "github.com/polynetwork/poly/common"
	vconfig "github.com/polynetwork/poly/consensus/vbft/config"
	polytype "github.com/polynetwork/poly/core/types"
	"github.com/stretchr/testify/assert"
	abci "github.com/tendermint/tendermint/abci/types"
	"testing"
)

var (
	header0      = "000000009b9156170000000000000000000000000000000000000000000000000000000000000000000000006de0a8f7ee3fb67d8e04ac9547f3615e59adc6e0a2309c90080a272dc1fa1fd90000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000c8365b000000001dac2b7c00000000fd1a057b226c6561646572223a343239343936373239352c227672665f76616c7565223a22484a675171706769355248566745716354626e6443456c384d516837446172364e4e646f6f79553051666f67555634764d50675851524171384d6f38373853426a2b38577262676c2b36714d7258686b667a72375751343d222c227672665f70726f6f66223a22785864422b5451454c4c6a59734965305378596474572f442f39542f746e5854624e436667354e62364650596370382f55706a524c572f536a5558643552576b75646632646f4c5267727052474b76305566385a69413d3d222c226c6173745f636f6e6669675f626c6f636b5f6e756d223a343239343936373239352c226e65775f636861696e5f636f6e666967223a7b2276657273696f6e223a312c2276696577223a312c226e223a372c2263223a322c22626c6f636b5f6d73675f64656c6179223a31303030303030303030302c22686173685f6d73675f64656c6179223a31303030303030303030302c22706565725f68616e647368616b655f74696d656f7574223a31303030303030303030302c227065657273223a5b7b22696e646578223a312c226964223a2231323035303238313732393138353430623262353132656165313837326132613265336132386439383963363064393564616238383239616461376437646437303664363538227d2c7b22696e646578223a322c226964223a2231323035303338623861663632313065636664636263616232323535326566386438636634316336663836663963663961623533643836353734316366646238333366303662227d2c7b22696e646578223a332c226964223a2231323035303234383261636236353634623139623930363533663665396338303632393265386161383366373865376139333832613234613665666534316330633036663339227d2c7b22696e646578223a342c226964223a2231323035303236373939333061343261616633633639373938636138613366313265313334633031393430353831386437383364313137343865303339646538353135393838227d2c7b22696e646578223a352c226964223a2231323035303234363864643138393965643264316363326238323938383261313635613065636236613734356166306337326562323938326436366234333131623465663733227d2c7b22696e646578223a362c226964223a2231323035303265623162616162363032633538393932383235363163646161613761616262636464306363666362633365373937393361633234616366393037373866333561227d2c7b22696e646578223a372c226964223a2231323035303331653037373966356335636362323631323335326665346132303066393964336537373538653730626135336636303763353966663232613330663637386666227d5d2c22706f735f7461626c65223a5b362c342c332c352c362c312c322c352c342c372c342c322c332c332c372c362c352c342c362c352c312c342c332c312c322c352c322c322c362c312c342c352c342c372c322c332c342c312c352c372c342c312c322c322c352c362c342c342c322c372c332c362c362c352c312c372c332c312c362c312c332c332c322c342c342c312c352c362c352c312c322c362c372c352c362c332c342c372c372c332c322c372c312c352c362c352c322c332c362c322c362c312c372c372c372c312c372c342c332c332c332c322c312c372c355d2c226d61785f626c6f636b5f6368616e67655f76696577223a36303030307d7d9fe171f3fe643eb1c188400b828ba184816fc9ac0000"
	header1      = "000000000000000000000000f7259d9da6edb2672055c4f0efd8729f921ff4f2ea6cfe2c632bf9137a8eabbc00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000d43e5bb4e452c5130a39a3fa2f4e738e84b8caba1ab8a525eb0c379224a0c48de2ebe25e010000002ae3e811eb3c5bd1fd0c017b226c6561646572223a322c227672665f76616c7565223a22424c48634b703946724866376b64383866685a3644724748314f735178726f795a6a66766165664d5546337673517a36764a654e2b3252657a524a515a396e686143554759645544745869533232355851584b773563413d222c227672665f70726f6f66223a224e6b6364676550454c6672315957544e62587644527a6165654d55667a386364453553456635764d656966456f3063736744656d45685933552f38527764726954385859636b7a4948772b7a527146456e7a333653413d3d222c226c6173745f636f6e6669675f626c6f636b5f6e756d223a302c226e65775f636861696e5f636f6e666967223a6e756c6c7d000000000000000000000000000000000000000005231205038b8af6210ecfdcbcab22552ef8d8cf41c6f86f9cf9ab53d865741cfdb833f06b23120502468dd1899ed2d1cc2b829882a165a0ecb6a745af0c72eb2982d66b4311b4ef73231205028172918540b2b512eae1872a2a2e3a28d989c60d95dab8829ada7d7dd706d65823120502eb1baab602c5899282561cdaaa7aabbcdd0ccfcbc3e79793ac24acf90778f35a231205031e0779f5c5ccb2612352fe4a200f99d3e7758e70ba53f607c59ff22a30f678ff0542011b08344011cc4cb986a1d2377c40f3a8323482898c6fcd0b5409e692ab46b808e35f9c55ece062a88184e72238ea399285c2ad713502fac81021ae29347ab54d2042011ce19b532a1493941857693ba4814a8e6aa80b672ed01afc0d6b0731e950b0979c13b9da269d2ec852d97c51f6168b01670c97aa8e94e432c9eb328588a8c5894542011b28e0f812a3dc60aed05566486255b29a668542e15bc58a7b6766a925161952242e43357eacc2809aedcc5c4d759d5fc7bdc07ee138b5300da10ea6216f3b444542011b5bf63ec75de24f6d50f87de975873949e405fc03d336c5a825b0648542d91c63534e49e6a20a01e687a88cdebbe11fc5b7ed8c0af2a05d755c94c70b14aa5b8e42011c45d610eea32ae083e8fe510722e3abbc9c46ea73b629bc1e988a328352570cf6041334cb8e70265e4553cf035ba159052ba6a75a67bc4edbf857030299b01765"
	header100    = "000000000000000000000000e0f0785066a925b785bfd1d5519a4d0edc43dfb356250a895deae7bb6021d0e0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000009c1403d92e63e51294c195a7f010161af68797403b4cecb984cbd982947a9ccb57f3e25e640000009c91f16c86018253fd0c017b226c6561646572223a342c227672665f76616c7565223a22424436455568326a5566554b665334526c4366473531615244676d354f6c67556938332f434d70665965514b6d696d34565146395a63786b3042494a6e494a4d59646b66674f466f434e56686949726a4f6465654a32413d222c227672665f70726f6f66223a2237726a78792b4a4d6968457352414f7243474d342f7861386d6736452f5a723874594f672f764b59744f34452f76444e67636e5661714a2f5a384e6169304e4d6f6b6c2f6661655a4e7474774d6a794a64666d2b44673d3d222c226c6173745f636f6e6669675f626c6f636b5f6e756d223a302c226e65775f636861696e5f636f6e666967223a6e756c6c7d00000000000000000000000000000000000000000523120502679930a42aaf3c69798ca8a3f12e134c019405818d783d11748e039de851598823120502468dd1899ed2d1cc2b829882a165a0ecb6a745af0c72eb2982d66b4311b4ef7323120502eb1baab602c5899282561cdaaa7aabbcdd0ccfcbc3e79793ac24acf90778f35a231205031e0779f5c5ccb2612352fe4a200f99d3e7758e70ba53f607c59ff22a30f678ff231205028172918540b2b512eae1872a2a2e3a28d989c60d95dab8829ada7d7dd706d6580542011b816142c7200e87a3f3e3baf6f5c2c85f6c5782b5cbe1211baf05a7e109ddb05238c7ba67e10c368d9847683983997924a1d8009e4ae2c966cf18f354e11edb1d42011c8f87522fa7402a00e0cca81a5661019a659daba32578d749dd248863e4e163861c55d4782a8cc0913bb414aa632aa60196d117e01265526fc93f7dfd884abf5142011c50d75ff6ee5b20e37cd7086adaaf232fecafb1e961b143fbf193c0880baf8aa2219d4c5ca3975303526efd012305f7b20967e904e86dfa1c8a91b6bb5865cdb042011cf66219e28cedc8e9658634761cec1d8881b0f5565a44cb1662854e781bbee2be7e59f31133fdf63df5463fc79d26e17b19ad6cfba1405eee2a49ec51c56f2b1042011c0525123e31eca225fae7bdd93cb20007aba3c2de5049183e04463499c7ebe2f63dd15a6d6689c3516eacca29280032e32f2ccdb1fa9c6576ee0fb00977f46a36"
	header789    = "0000000000000000000000006bf674f94b5fa8f9162862d9819fac0269c076e57b585c74250e1822796fe3c800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f5acf13053c4c95860ea03fdc3b32a202526b7e3ac324f1fcfa6e71690fc1ebaa223e35e15030000cea56e46d0b449e0fd0c017b226c6561646572223a372c227672665f76616c7565223a22424c722b3439656530444f576c48664e586b56542b41443451336f466d48464f3650486c5138795545464267636747336f76334f63506459564a75425a6947756d52366d4e70346f4e4d745546753842323359484a73453d222c227672665f70726f6f66223a226973564d61482f2b6470532b64465576444d6c614e74366b764177366979667478672b667a5870345367476a433870354c4a7042446c705354514949536a322b796c75354270426b7a487139664869316d68467059413d3d222c226c6173745f636f6e6669675f626c6f636b5f6e756d223a302c226e65775f636861696e5f636f6e666967223a6e756c6c7d000000000000000000000000000000000000000005231205031e0779f5c5ccb2612352fe4a200f99d3e7758e70ba53f607c59ff22a30f678ff231205028172918540b2b512eae1872a2a2e3a28d989c60d95dab8829ada7d7dd706d65823120502679930a42aaf3c69798ca8a3f12e134c019405818d783d11748e039de851598823120502468dd1899ed2d1cc2b829882a165a0ecb6a745af0c72eb2982d66b4311b4ef7323120502eb1baab602c5899282561cdaaa7aabbcdd0ccfcbc3e79793ac24acf90778f35a0542011c266062b247794b7f825f4a7df438a91fb3859186abb8d3bd6875c7078ff28e84759bbcfbc506a4eb61b454a4f27c46d5e648d44126cc5f609252b06b03cff58842011be72b40160c20338dd70b9ec57c33626ac5e1ba164ba0ae1217ce6bfbb3abdb1e53018bd50d3037aa77f88d9cdd99029d404af8f4b06cb7314e60450d06d1795242011b65b015ddf245c81739ac0465f9f7f57bd76c7bd5065e27ea3639ae9254194bd92e0fa0579b107dde1254cc49cf77bdc4a04535bb8ce12b8ff99a077ad9a5777f42011b79b47d063e0986a1e2db1358870b2237889ed20db8a15b83792e097f0a3f4bc155690a978fbf403e5a9ee4f9bda23c3e51c15c6aca95303cb9cf72d9d89ecfb542011c354aacccaaa0b7a311d21945aaeafb15ce1136306236884604ea3a825b9e3bd31eceb09be793c8294b495fe3120ec740d23a82e5967508289f69f6dc89074a39"
	header180000 = "00000000000000000000000052fbb657658f68af60d159202846fc6b4ed46edbff24247d23f52f6c252d3eaeea26f36ebf648b8ccc7852212866a8f1a722251531bc97eb8b8f4b43bd1cc3b23d4377d38024be5534a2ca6a4c82c884c58aa68558e31fb9cda337eae14aa5d56877d16a4f2e5e2efe4da12d6c3557122d04f28b999713b26baf2fe5db7cedf7526af95e20bf02007b5e6494b96f806cfd0d057b226c6561646572223a312c227672665f76616c7565223a224249443659784335454d4f52645234467637426d55643679426a723868566378534d733970672b6b30524f6978422f4b45396e41475866684b7359703362435477777067476739594a756b5141446951546545673638773d222c227672665f70726f6f66223a22737458776b48704d6b6631615773394f376a644a7654545265444f4141754174516d377468326b4a564f3854396975666d576c4650434459422b644961353738714537754d484c66377761432b4655357149353736673d3d222c226c6173745f636f6e6669675f626c6f636b5f6e756d223a3138303030302c226e65775f636861696e5f636f6e666967223a7b2276657273696f6e223a312c2276696577223a342c226e223a372c2263223a322c22626c6f636b5f6d73675f64656c6179223a31303030303030303030302c22686173685f6d73675f64656c6179223a31303030303030303030302c22706565725f68616e647368616b655f74696d656f7574223a31303030303030303030302c227065657273223a5b7b22696e646578223a372c226964223a2231323035303331653037373966356335636362323631323335326665346132303066393964336537373538653730626135336636303763353966663232613330663637386666227d2c7b22696e646578223a362c226964223a2231323035303265623162616162363032633538393932383235363163646161613761616262636464306363666362633365373937393361633234616366393037373866333561227d2c7b22696e646578223a312c226964223a2231323035303238313732393138353430623262353132656165313837326132613265336132386439383963363064393564616238383239616461376437646437303664363538227d2c7b22696e646578223a342c226964223a2231323035303236373939333061343261616633633639373938636138613366313265313334633031393430353831386437383364313137343865303339646538353135393838227d2c7b22696e646578223a332c226964223a2231323035303234383261636236353634623139623930363533663665396338303632393265386161383366373865376139333832613234613665666534316330633036663339227d2c7b22696e646578223a352c226964223a2231323035303234363864643138393965643264316363326238323938383261313635613065636236613734356166306337326562323938326436366234333131623465663733227d2c7b22696e646578223a322c226964223a2231323035303338623861663632313065636664636263616232323535326566386438636634316336663836663963663961623533643836353734316366646238333366303662227d5d2c22706f735f7461626c65223a5b362c362c322c322c332c352c322c352c322c372c312c312c352c362c362c322c312c362c312c332c322c372c362c362c372c342c352c332c312c312c342c312c352c312c362c342c372c352c352c342c362c342c342c322c332c352c322c332c332c312c342c312c362c312c372c342c322c322c332c342c332c352c362c372c362c342c322c332c362c352c372c342c352c342c312c352c332c342c332c372c372c372c312c312c372c342c332c362c332c352c372c332c322c312c332c372c372c322c322c352c322c342c372c362c355d2c226d61785f626c6f636b5f6368616e67655f76696577223a36303030307d7d9fe171f3fe643eb1c188400b828ba184816fc9ac05231205028172918540b2b512eae1872a2a2e3a28d989c60d95dab8829ada7d7dd706d658231205031e0779f5c5ccb2612352fe4a200f99d3e7758e70ba53f607c59ff22a30f678ff23120502482acb6564b19b90653f6e9c806292e8aa83f78e7a9382a24a6efe41c0c06f3923120502eb1baab602c5899282561cdaaa7aabbcdd0ccfcbc3e79793ac24acf90778f35a23120502679930a42aaf3c69798ca8a3f12e134c019405818d783d11748e039de85159880542011b913287f12365611a836c617483268f3e03cad4afd07a594c0d09593ce76a5e487259395399a6dd30173f36e1df727352720c2e5929dddd3c3f8b328319142a1642011b4b938ef72f2c729cccce19c7e12cf4eaea265cf4d58ad6b670604f11374c5ca9439d0750ee41ae2a4db7cb0f72707bcbeb2b8546046f09bf53a1f9c0df62291d42011ca7a7ffa3c630e34641e343c26ba4bb5b4bec325be2768bef4c59994143eccabe218631933d634b2d4b6490e0b75cbbae3c14327701a213631cb5fd80740ea7a342011cbc3904da476a9a18eb8aa874ca0edc7d98b7aefc331b0e8e074a9b174bdf7acb52412a467660197235996e9dd0a9ba54284bac45588a1b9d9f33d70dcd420c7942011b154ae793f0949eef3e2f8fe34d59fd4f1f5d06acfa35e2fdb39ae905e97dc8027963bdf443c0d6fd6266c4a672bffad7c4676cb014f7d36f8d0593d51d5a0549"
	header180005 = "0000000000000000000000007a7bae6141b46e5899aea1b156dcd606106391beefb33a8ba9fabce631e98a4b818b21121eb3c5f92b8c74f37a124cf3a5b84fc36346eb0e47daffddc03964fc7a4de1acba45d5b9914040ea39990cd4350acd277b08def115e11ed74c35acf0d889ae8f312eaa09bc41dffbe4570fab09cfa59948dd514641b677a4ac3eb87b586af95e25bf02008555f3dcd9d2f012fd11017b226c6561646572223a372c227672665f76616c7565223a22424f5539512b546461634b5a4c494d554c4164393764384b775175473049396975442b386d3372634c43525743453150447147796876694463374c3856374e356154484a43674669462b344c39644255656d2b7a3262733d222c227672665f70726f6f66223a226f4668575574485042544c475738542b7642743558485658785753536b32422b423530433038583645634f6d31666d593866502b4465364d347a6a33386a7568466937767936424850675a3655446337676a52644e773d3d222c226c6173745f636f6e6669675f626c6f636b5f6e756d223a3138303030302c226e65775f636861696e5f636f6e666967223a6e756c6c7d000000000000000000000000000000000000000005231205031e0779f5c5ccb2612352fe4a200f99d3e7758e70ba53f607c59ff22a30f678ff231205028172918540b2b512eae1872a2a2e3a28d989c60d95dab8829ada7d7dd706d65823120502468dd1899ed2d1cc2b829882a165a0ecb6a745af0c72eb2982d66b4311b4ef7323120502679930a42aaf3c69798ca8a3f12e134c019405818d783d11748e039de851598823120502482acb6564b19b90653f6e9c806292e8aa83f78e7a9382a24a6efe41c0c06f390542011c168ba4c658ebf5525837aabbde2997d657a5eafc9fb5af143de3481dee856698355e69d367f222895854f9d1c3959c4f1045dcff35a6b79f42a30b2582e9048a42011c9270121e09b3f92bab4c6c39ccc56b30bd464091a6fd0f4d419bad8818e32aff523e750d0a725643901f25be78ea1416a85fa99906e2e5d5d64576f6f039e8bd42011b36e206f75a6bc211603556dcfb4a1f53383aa54aa940571786c96bbf644e8c765d2eb13529e1c080c449d0dd0423a468f4e4b8fa48eb7239384c00900dc224a542011c3e6fbecdbd1d80e97e9656323014604227473471d973f4f8e71104971cd311bf66780381307fd00eaa9f1f76a57faf1649379ab939da166e633d9637a4d0949b42011c81b2eed9b7454acc64d3ec0185098e6bb85c8d7f6f09c8efc8f2be716210fabd24f4059898504ea8eb4dc241235137101b9877c7ce3b83bdfd74fe8479d4f9b7"
)

// returns context and an app with updated mint keeper
func createTestApp(isCheckTx bool) (*simapp.SimApp, sdk.Context) {
	app := simapp.Setup(isCheckTx)

	ctx := app.BaseApp.NewContext(isCheckTx, abci.Header{})
	return app, ctx
}

func Test_headersync_Serialize_PolyHeader(t *testing.T) {
	var header polytype.Header
	h0s, _ := hex.DecodeString(header0)
	source := polycommon.NewZeroCopySource(h0s)
	err := header.Deserialization(source)
	assert.Nil(t, err)
	sink := polycommon.NewZeroCopySink(nil)
	err = header.Serialization(sink)
	assert.Nil(t, err)
	assert.Equal(t, h0s, sink.Bytes())
}

func Test_headersync_SyncHeaders(t *testing.T) {
	app, ctx := createTestApp(true)

	h0s, _ := hex.DecodeString(header0)
	header := new(polytype.Header)
	err := header.Deserialization(polycommon.NewZeroCopySource(h0s))
	assert.Nil(t, err)

	err = app.HeaderSyncKeeper.SyncGenesisHeader(ctx, header0)
	assert.Nil(t, err, "Sync genesis header fail")

	var chainId uint64 = 0
	consensusPeers, err := app.HeaderSyncKeeper.GetConsensusPeers(ctx, chainId)
	assert.Nil(t, err)
	fmt.Printf("consensusPeers are %s\n", consensusPeers.String())
	// the genesis header should contain the consensus peers info, the height may be not ZERO but should be the header contains consensus address of next cycle
	assert.Equal(t, uint64(0), consensusPeers.ChainID)
	assert.Equal(t, uint32(0), consensusPeers.Height)
	cpBs, err := ExtractChainConfig(header)
	assert.Nil(t, err)
	resSink := polycommon.NewZeroCopySink(nil)
	consensusPeers.Serialization(resSink)
	assert.Equal(t, cpBs, resSink.Bytes())

	err = app.HeaderSyncKeeper.SyncBlockHeaders(ctx, []string{header1, header789, header100, header180000, header180005})
	assert.Nil(t, err, "Sync Poly Chain block headers fail")

	consensusPeers, err = app.HeaderSyncKeeper.GetConsensusPeers(ctx, chainId)
	assert.Nil(t, err)
	fmt.Printf("consensusPeers are %s\n", consensusPeers.String())
	assert.Equal(t, uint64(0), consensusPeers.ChainID)
	assert.Equal(t, uint32(180000), consensusPeers.Height)
	resSink = polycommon.NewZeroCopySink(nil)
	consensusPeers.Serialization(resSink)

	h180000s, err := hex.DecodeString(header180000)
	assert.Nil(t, err, "header180000 hex to header180000 bytes error")
	header180000 := new(polytype.Header)
	err = header180000.Deserialization(polycommon.NewZeroCopySource(h180000s))
	assert.Nil(t, err)
	cpBs, err = ExtractChainConfig(header180000)
	assert.Nil(t, err)
	assert.Equal(t, cpBs, resSink.Bytes())
}

func ExtractChainConfig(header *polytype.Header) ([]byte, error) {
	blkInfo := &vconfig.VbftBlockInfo{}
	if err := json.Unmarshal(header.ConsensusPayload, blkInfo); err != nil {
		return nil, fmt.Errorf("Unmarshal error")
	}
	if blkInfo.NewChainConfig != nil {
		consensusPeers := &types.ConsensusPeers{
			ChainID: header.ChainID,
			Height:  header.Height,
			PeerMap: make(map[string]*types.Peer),
		}
		for _, p := range blkInfo.NewChainConfig.Peers {
			consensusPeers.PeerMap[p.ID] = &types.Peer{Index: p.Index, PeerPubkey: p.ID}
		}
		sink := polycommon.NewZeroCopySink(nil)
		consensusPeers.Serialization(sink)
		return sink.Bytes(), nil
	}

	return nil, fmt.Errorf("No new chain config")
}
